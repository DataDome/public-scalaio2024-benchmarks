[info] Benchmark                                                              Mode  Cnt      Score      Error  Units
[info] AppendBenchmark_Int_Large.append_javaArrayList                         avgt   20  12701.865 ±  538.823  us/op
[info] AppendBenchmark_Int_Large.append_list                                  avgt   20  15622.236 ±  865.664  us/op
[info] AppendBenchmark_Int_Large.append_listBuffer                            avgt   20   8121.578 ±  405.524  us/op
[info] AppendBenchmark_Int_Large.prepend_javaArrayList                        avgt   20  27294.853 ± 1104.444  us/op
[info] AppendBenchmark_Int_Large.prepend_list                                 avgt   20   7233.941 ±  252.833  us/op
[info] AppendBenchmark_Int_Large.prepend_listBuffer                           avgt   20   7879.237 ±  315.584  us/op
[info] AppendBenchmark_String_Large.append_javaArrayList                      avgt   20  13897.604 ±  668.627  us/op
[info] AppendBenchmark_String_Large.append_list                               avgt   20  16854.993 ±  991.662  us/op
[info] AppendBenchmark_String_Large.append_listBuffer                         avgt   20   9350.165 ±  464.937  us/op
[info] AppendBenchmark_String_Large.prepend_javaArrayList                     avgt   20  28722.494 ± 2225.561  us/op
[info] AppendBenchmark_String_Large.prepend_list                              avgt   20   7290.035 ±  412.455  us/op
[info] AppendBenchmark_String_Large.prepend_listBuffer                        avgt   20   7921.602 ±  410.995  us/op
[info] CollectionIntIterationBenchmark_Large.fastFoldLeftWithIndex_Vector     avgt   20   4340.408 ±  474.717  us/op
[info] CollectionIntIterationBenchmark_Large.fastFoldLeft_Array               avgt   20      0.001 ±    0.001  us/op
[info] CollectionIntIterationBenchmark_Large.fastFoldLeft_List                avgt   20   4112.738 ±  653.497  us/op
[info] CollectionIntIterationBenchmark_Large.fastFoldLeft_Vector              avgt   20   3344.128 ±  167.510  us/op
[info] CollectionIntIterationBenchmark_Large.foldLeft_Array                   avgt   20   4245.224 ±   62.833  us/op
[info] CollectionIntIterationBenchmark_Large.foldLeft_List                    avgt   20   5299.184 ±  656.850  us/op
[info] CollectionIntIterationBenchmark_Large.foldLeft_Vector                  avgt   20   5544.896 ±  284.055  us/op
[info] CollectionIntIterationBenchmark_Large.for_Array                        avgt   20   3601.419 ±  139.556  us/op
[info] CollectionIntIterationBenchmark_Large.for_List                         avgt   20   5141.642 ± 1002.840  us/op
[info] CollectionIntIterationBenchmark_Large.for_Vector                       avgt   20   2807.899 ±  131.970  us/op
[info] CollectionIntIterationBenchmark_Large.mapSum_Array                     avgt   20   7174.530 ±  115.002  us/op
[info] CollectionIntIterationBenchmark_Large.mapSum_List                      avgt   20  32915.091 ± 3468.895  us/op
[info] CollectionIntIterationBenchmark_Large.mapSum_Vector                    avgt   20  11474.878 ±  957.974  us/op
[info] CollectionIntIterationBenchmark_Large.recursion_List                   avgt   20   4256.280 ±  813.013  us/op
[info] CollectionIntIterationBenchmark_Large.reverseWhile_Array               avgt   20      0.001 ±    0.001  us/op
[info] CollectionIntIterationBenchmark_Large.reverseWhile_Vector              avgt   20   5183.308 ± 1422.711  us/op
[info] CollectionIntIterationBenchmark_Large.viewMapSum_Array                 avgt   20   7854.950 ±   76.384  us/op
[info] CollectionIntIterationBenchmark_Large.viewMapSum_List                  avgt   20   7077.326 ±  355.811  us/op
[info] CollectionIntIterationBenchmark_Large.viewMapSum_Vector                avgt   20   8788.048 ±  383.573  us/op
[info] CollectionIntIterationBenchmark_Large.while_Array                      avgt   20      0.001 ±    0.001  us/op
[info] CollectionIntIterationBenchmark_Large.while_List                       avgt   20   3899.151 ±  102.377  us/op
[info] CollectionIntIterationBenchmark_Large.while_Vector                     avgt   20   3613.236 ±  129.534  us/op
[info] CollectionStringIterationBenchmark_Large.fastFoldLeftWithIndex_Vector  avgt   20  16218.118 ± 1612.435  us/op
[info] CollectionStringIterationBenchmark_Large.fastFoldLeft_Array            avgt   20  13261.033 ±  504.341  us/op
[info] CollectionStringIterationBenchmark_Large.fastFoldLeft_List             avgt   20  17029.029 ± 2547.628  us/op
[info] CollectionStringIterationBenchmark_Large.fastFoldLeft_Vector           avgt   20  17641.460 ±  753.878  us/op
[info] CollectionStringIterationBenchmark_Large.foldLeft_Array                avgt   20  10094.122 ±  482.027  us/op
[info] CollectionStringIterationBenchmark_Large.foldLeft_List                 avgt   20  12182.209 ±  590.973  us/op
[info] CollectionStringIterationBenchmark_Large.foldLeft_Vector               avgt   20  15198.629 ± 1343.017  us/op
[info] CollectionStringIterationBenchmark_Large.for_Array                     avgt   20  14414.319 ±  168.297  us/op
[info] CollectionStringIterationBenchmark_Large.for_List                      avgt   20  18666.321 ± 1194.898  us/op
[info] CollectionStringIterationBenchmark_Large.for_Vector                    avgt   20  17317.749 ± 1219.163  us/op
[info] CollectionStringIterationBenchmark_Large.mapSum_Array                  avgt   20  13734.907 ±  139.208  us/op
[info] CollectionStringIterationBenchmark_Large.mapSum_List                   avgt   20  36192.535 ± 2714.783  us/op
[info] CollectionStringIterationBenchmark_Large.mapSum_Vector                 avgt   20  19952.263 ±  809.279  us/op
[info] CollectionStringIterationBenchmark_Large.recursion_List                avgt   20  19875.546 ± 1357.723  us/op
[info] CollectionStringIterationBenchmark_Large.reverseWhile_Array            avgt   20  12985.654 ±  491.110  us/op
[info] CollectionStringIterationBenchmark_Large.reverseWhile_Vector           avgt   20  19415.007 ± 1214.221  us/op
[info] CollectionStringIterationBenchmark_Large.viewMapSum_Array              avgt   20  14467.888 ±  240.989  us/op
[info] CollectionStringIterationBenchmark_Large.viewMapSum_List               avgt   20  15554.297 ±  423.099  us/op
[info] CollectionStringIterationBenchmark_Large.viewMapSum_Vector             avgt   20  19040.812 ± 2211.678  us/op
[info] CollectionStringIterationBenchmark_Large.while_Array                   avgt   20   8776.386 ±   85.675  us/op
[info] CollectionStringIterationBenchmark_Large.while_List                    avgt   20  11464.657 ±  837.817  us/op
[info] CollectionStringIterationBenchmark_Large.while_Vector                  avgt   20  16170.145 ± 3149.731  us/op
[info] MapBenchmark_Int_HalfHit_Large.apply_ArrayMap                          avgt   20      2.181 ±    0.035  us/op
[info] MapBenchmark_Int_HalfHit_Large.get_HashMap                             avgt   20     40.974 ±    0.231  us/op
[info] MapBenchmark_Int_HalfHit_Large.get_IntMap                              avgt   20    251.198 ±    6.208  us/op
[info] MapBenchmark_Int_HalfHit_Large.get_JavaHashMap                         avgt   20     12.730 ±    0.187  us/op
[info] MapBenchmark_Int_HalfHit_Small.apply_ArrayMap                          avgt   20      2.047 ±    0.011  us/op
[info] MapBenchmark_Int_HalfHit_Small.get_HashMap                             avgt   20      9.174 ±    0.080  us/op
[info] MapBenchmark_Int_HalfHit_Small.get_IntMap                              avgt   20     15.407 ±    0.215  us/op
[info] MapBenchmark_Int_HalfHit_Small.get_JavaHashMap                         avgt   20      7.170 ±    0.113  us/op
[info] MapBenchmark_Invoice_HalfHit_Large.apply_ArrayMap                      avgt   20      2.655 ±    0.026  us/op
[info] MapBenchmark_Invoice_HalfHit_Large.get_HashMap                         avgt   20     71.588 ±    0.883  us/op
[info] MapBenchmark_Invoice_HalfHit_Large.get_JavaHashMap                     avgt   20     13.307 ±    0.118  us/op
[info] MapBenchmark_Invoice_HalfHit_Small.apply_ArrayMap                      avgt   20      2.151 ±    0.021  us/op
[info] MapBenchmark_Invoice_HalfHit_Small.get_HashMap                         avgt   20     10.417 ±    0.039  us/op
[info] MapBenchmark_Invoice_HalfHit_Small.get_JavaHashMap                     avgt   20      6.861 ±    0.067  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_Array                  avgt   20     ≈ 10⁻³             us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_ArraySet               avgt   20      3.108 ±    0.050  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_BitSet                 avgt   20      3.414 ±    0.008  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_JavaHashSet            avgt   20     12.045 ±    0.137  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_Set                    avgt   20     45.553 ±    0.588  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_SortedSet              avgt   20    665.727 ±   11.068  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_Array                  avgt   20     71.194 ±    1.231  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_ArraySet               avgt   20      0.879 ±    0.007  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_BitSet                 avgt   20      2.962 ±    0.052  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_JavaHashSet            avgt   20      6.492 ±    0.216  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_Set                    avgt   20      9.061 ±    0.031  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_SortedSet              avgt   20     19.275 ±    0.682  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_Array              avgt   20      5.068 ±    0.509  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_ArraySet           avgt   20      0.812 ±    0.008  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_BitSet             avgt   20      2.683 ±    0.029  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_JavaHashSet        avgt   20      6.733 ±    0.223  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_Set                avgt   20      6.289 ±    0.133  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_SortedSet          avgt   20      7.851 ±    0.116  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_Array                          avgt   20     ≈ 10⁻³             us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_ArraySet                       avgt   20      1.816 ±    0.113  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_BitSet                         avgt   20      2.900 ±    0.040  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_JavaHashSet                    avgt   20     15.845 ±    0.177  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_Set                            avgt   20     45.590 ±    0.286  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_SortedSet                      avgt   20    589.267 ±   11.935  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_Array                          avgt   20    211.033 ±    2.134  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_ArraySet                       avgt   20      0.783 ±    0.025  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_BitSet                         avgt   20      2.856 ±    0.029  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_JavaHashSet                    avgt   20      6.142 ±    0.027  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_Set                            avgt   20      7.063 ±    0.057  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_SortedSet                      avgt   20     22.832 ±    0.093  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_Array                      avgt   20     13.635 ±    0.142  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_ArraySet                   avgt   20      0.781 ±    0.002  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_BitSet                     avgt   20      2.860 ±    0.026  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_JavaHashSet                avgt   20      6.495 ±    0.032  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_Set                        avgt   20      5.342 ±    0.056  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_SortedSet                  avgt   20      8.114 ±    0.116  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_Array                      avgt   20     ≈ 10⁻³             us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_ArraySet                   avgt   20      3.106 ±    0.050  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_BitSet                     avgt   20      3.114 ±    0.043  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_JavaHashSet                avgt   20     11.164 ±    0.209  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_Set                        avgt   20     62.726 ±    0.765  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_SortedSet                  avgt   20    664.388 ±   10.765  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_Array                      avgt   20     71.115 ±    0.255  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_ArraySet                   avgt   20      0.863 ±    0.017  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_BitSet                     avgt   20      2.921 ±    0.035  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_JavaHashSet                avgt   20      5.955 ±    0.047  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_Set                        avgt   20      7.456 ±    0.045  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_SortedSet                  avgt   20     18.534 ±    0.107  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_Array                  avgt   20      4.609 ±    0.025  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_ArraySet               avgt   20      0.826 ±    0.010  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_BitSet                 avgt   20      2.509 ±    0.013  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_JavaHashSet            avgt   20      5.533 ±    0.040  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_Set                    avgt   20      5.533 ±    0.060  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_SortedSet              avgt   20      8.646 ±    0.138  us/op

[info] Benchmark                                                              Mode  Cnt      Score      Error  Units
[info] AppendBenchmark_Int_Large.append_javaArrayList                         avgt   20  12581.901 ±  602.006  us/op
[info] AppendBenchmark_Int_Large.append_list                                  avgt   20  15864.135 ± 1350.467  us/op
[info] AppendBenchmark_Int_Large.append_listBuffer                            avgt   20   9361.020 ±  886.497  us/op
[info] AppendBenchmark_Int_Large.prepend_javaArrayList                        avgt   20  27258.462 ± 2557.932  us/op
[info] AppendBenchmark_Int_Large.prepend_list                                 avgt   20   6996.150 ±  357.862  us/op
[info] AppendBenchmark_Int_Large.prepend_listBuffer                           avgt   20   8777.171 ±  474.279  us/op
[info] AppendBenchmark_String_Large.append_javaArrayList                      avgt   20  13628.291 ±  436.311  us/op
[info] AppendBenchmark_String_Large.append_list                               avgt   20  16376.967 ± 1170.728  us/op
[info] AppendBenchmark_String_Large.append_listBuffer                         avgt   20   9406.667 ± 1052.709  us/op
[info] AppendBenchmark_String_Large.prepend_javaArrayList                     avgt   20  27721.663 ± 1275.023  us/op
[info] AppendBenchmark_String_Large.prepend_list                              avgt   20   7306.328 ±  434.851  us/op
[info] AppendBenchmark_String_Large.prepend_listBuffer                        avgt   20   7723.390 ±  410.009  us/op
[info] CollectionIntIterationBenchmark_Large.fastFoldLeftWithIndex_Vector     avgt   20   4020.243 ±  352.213  us/op
[info] CollectionIntIterationBenchmark_Large.fastFoldLeft_Array               avgt   20      0.001 ±    0.001  us/op
[info] CollectionIntIterationBenchmark_Large.fastFoldLeft_List                avgt   20   3584.953 ±   56.356  us/op
[info] CollectionIntIterationBenchmark_Large.fastFoldLeft_Vector              avgt   20   3019.879 ±   28.717  us/op
[info] CollectionIntIterationBenchmark_Large.foldLeft_Array                   avgt   20   4247.468 ±   63.562  us/op
[info] CollectionIntIterationBenchmark_Large.foldLeft_List                    avgt   20   5982.825 ±  755.327  us/op
[info] CollectionIntIterationBenchmark_Large.foldLeft_Vector                  avgt   20   5418.670 ±  410.021  us/op
[info] CollectionIntIterationBenchmark_Large.for_Array                        avgt   20   3481.466 ±   49.425  us/op
[info] CollectionIntIterationBenchmark_Large.for_List                         avgt   20   4684.327 ±  700.655  us/op
[info] CollectionIntIterationBenchmark_Large.for_Vector                       avgt   20   2873.488 ±  155.814  us/op
[info] CollectionIntIterationBenchmark_Large.mapSum_Array                     avgt   20   7145.873 ±   55.967  us/op
[info] CollectionIntIterationBenchmark_Large.mapSum_List                      avgt   20  32524.969 ± 3266.823  us/op
[info] CollectionIntIterationBenchmark_Large.mapSum_Vector                    avgt   20  12097.892 ±  715.209  us/op
[info] CollectionIntIterationBenchmark_Large.recursion_List                   avgt   20   4215.221 ±  802.823  us/op
[info] CollectionIntIterationBenchmark_Large.reverseWhile_Array               avgt   20      0.001 ±    0.001  us/op
[info] CollectionIntIterationBenchmark_Large.reverseWhile_Vector              avgt   20   5492.642 ± 1345.694  us/op
[info] CollectionIntIterationBenchmark_Large.viewMapSum_Array                 avgt   20   7904.386 ±   56.554  us/op
[info] CollectionIntIterationBenchmark_Large.viewMapSum_List                  avgt   20   7631.806 ±  427.359  us/op
[info] CollectionIntIterationBenchmark_Large.viewMapSum_Vector                avgt   20   9371.698 ±  182.567  us/op
[info] CollectionIntIterationBenchmark_Large.while_Array                      avgt   20      0.001 ±    0.001  us/op
[info] CollectionIntIterationBenchmark_Large.while_List                       avgt   20   4360.106 ±  565.188  us/op
[info] CollectionIntIterationBenchmark_Large.while_Vector                     avgt   20   3519.138 ±   67.171  us/op
[info] CollectionStringIterationBenchmark_Large.fastFoldLeftWithIndex_Vector  avgt   20  12507.812 ±  529.298  us/op
[info] CollectionStringIterationBenchmark_Large.fastFoldLeft_Array            avgt   20  13951.836 ± 1332.599  us/op
[info] CollectionStringIterationBenchmark_Large.fastFoldLeft_List             avgt   20  18623.488 ± 1260.360  us/op
[info] CollectionStringIterationBenchmark_Large.fastFoldLeft_Vector           avgt   20  16464.027 ± 1892.673  us/op
[info] CollectionStringIterationBenchmark_Large.foldLeft_Array                avgt   20  10392.982 ±  196.235  us/op
[info] CollectionStringIterationBenchmark_Large.foldLeft_List                 avgt   20  12229.697 ±  768.047  us/op
[info] CollectionStringIterationBenchmark_Large.foldLeft_Vector               avgt   20  13757.461 ± 1094.262  us/op
[info] CollectionStringIterationBenchmark_Large.for_Array                     avgt   20  14179.873 ±  198.158  us/op
[info] CollectionStringIterationBenchmark_Large.for_List                      avgt   20  18259.064 ± 1365.461  us/op
[info] CollectionStringIterationBenchmark_Large.for_Vector                    avgt   20  16907.329 ±  853.448  us/op
[info] CollectionStringIterationBenchmark_Large.mapSum_Array                  avgt   20  13465.883 ±  119.336  us/op
[info] CollectionStringIterationBenchmark_Large.mapSum_List                   avgt   20  35362.484 ± 2653.272  us/op
[info] CollectionStringIterationBenchmark_Large.mapSum_Vector                 avgt   20  19144.425 ± 1138.160  us/op
[info] CollectionStringIterationBenchmark_Large.recursion_List                avgt   20  20418.233 ±  237.813  us/op
[info] CollectionStringIterationBenchmark_Large.reverseWhile_Array            avgt   20  13438.735 ±  346.624  us/op
[info] CollectionStringIterationBenchmark_Large.reverseWhile_Vector           avgt   20  18615.228 ±  234.695  us/op
[info] CollectionStringIterationBenchmark_Large.viewMapSum_Array              avgt   20  13740.703 ±  767.785  us/op
[info] CollectionStringIterationBenchmark_Large.viewMapSum_List               avgt   20  15113.246 ±  897.493  us/op
[info] CollectionStringIterationBenchmark_Large.viewMapSum_Vector             avgt   20  18868.723 ± 2400.524  us/op
[info] CollectionStringIterationBenchmark_Large.while_Array                   avgt   20  12846.645 ± 1142.280  us/op
[info] CollectionStringIterationBenchmark_Large.while_List                    avgt   20  19945.204 ± 1225.454  us/op
[info] CollectionStringIterationBenchmark_Large.while_Vector                  avgt   20  17614.039 ± 1333.018  us/op
[info] MapBenchmark_Int_HalfHit_Large.apply_ArrayMap                          avgt   20      2.214 ±    0.015  us/op
[info] MapBenchmark_Int_HalfHit_Large.get_HashMap                             avgt   20     41.105 ±    0.689  us/op
[info] MapBenchmark_Int_HalfHit_Large.get_IntMap                              avgt   20    247.423 ±    5.233  us/op
[info] MapBenchmark_Int_HalfHit_Large.get_JavaHashMap                         avgt   20     12.772 ±    0.189  us/op
[info] MapBenchmark_Int_HalfHit_Small.apply_ArrayMap                          avgt   20      1.992 ±    0.007  us/op
[info] MapBenchmark_Int_HalfHit_Small.get_HashMap                             avgt   20      9.176 ±    0.140  us/op
[info] MapBenchmark_Int_HalfHit_Small.get_IntMap                              avgt   20     15.298 ±    0.272  us/op
[info] MapBenchmark_Int_HalfHit_Small.get_JavaHashMap                         avgt   20      7.172 ±    0.078  us/op
[info] MapBenchmark_Invoice_HalfHit_Large.apply_ArrayMap                      avgt   20      2.670 ±    0.039  us/op
[info] MapBenchmark_Invoice_HalfHit_Large.get_HashMap                         avgt   20     73.669 ±    1.300  us/op
[info] MapBenchmark_Invoice_HalfHit_Large.get_JavaHashMap                     avgt   20     12.253 ±    0.100  us/op
[info] MapBenchmark_Invoice_HalfHit_Small.apply_ArrayMap                      avgt   20      2.111 ±    0.024  us/op
[info] MapBenchmark_Invoice_HalfHit_Small.get_HashMap                         avgt   20     10.470 ±    0.179  us/op
[info] MapBenchmark_Invoice_HalfHit_Small.get_JavaHashMap                     avgt   20      6.876 ±    0.107  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_Array                  avgt   20     ≈ 10⁻³             us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_ArraySet               avgt   20      2.815 ±    0.016  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_BitSet                 avgt   20      3.441 ±    0.048  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_JavaHashSet            avgt   20     12.334 ±    0.080  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_Set                    avgt   20     48.407 ±    0.689  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_SortedSet              avgt   20    649.704 ±    4.853  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_Array                  avgt   20     71.446 ±    1.221  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_ArraySet               avgt   20      0.882 ±    0.002  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_BitSet                 avgt   20      3.001 ±    0.110  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_JavaHashSet            avgt   20      6.559 ±    0.221  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_Set                    avgt   20      8.813 ±    0.259  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_SortedSet              avgt   20     18.957 ±    0.359  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_Array              avgt   20      4.624 ±    0.057  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_ArraySet           avgt   20      0.831 ±    0.008  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_BitSet             avgt   20      2.521 ±    0.042  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_JavaHashSet        avgt   20      6.670 ±    0.184  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_Set                avgt   20      6.310 ±    0.147  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_SortedSet          avgt   20      8.159 ±    0.107  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_Array                          avgt   20     ≈ 10⁻³             us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_ArraySet                       avgt   20      2.198 ±    0.016  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_BitSet                         avgt   20      2.865 ±    0.028  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_JavaHashSet                    avgt   20     15.848 ±    0.146  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_Set                            avgt   20     45.288 ±    0.221  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_SortedSet                      avgt   20    605.904 ±    2.283  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_Array                          avgt   20    211.511 ±    3.158  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_ArraySet                       avgt   20      0.776 ±    0.004  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_BitSet                         avgt   20      2.823 ±    0.007  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_JavaHashSet                    avgt   20      6.102 ±    0.056  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_Set                            avgt   20      7.079 ±    0.035  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_SortedSet                      avgt   20     22.971 ±    0.334  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_Array                      avgt   20     13.627 ±    0.060  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_ArraySet                   avgt   20      0.781 ±    0.002  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_BitSet                     avgt   20      3.001 ±    0.010  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_JavaHashSet                avgt   20      6.118 ±    0.065  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_Set                        avgt   20      5.333 ±    0.011  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_SortedSet                  avgt   20      9.225 ±    0.071  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_Array                      avgt   20     ≈ 10⁻³             us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_ArraySet                   avgt   20      2.819 ±    0.022  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_BitSet                     avgt   20      3.434 ±    0.025  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_JavaHashSet                avgt   20     11.257 ±    0.227  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_Set                        avgt   20     60.936 ±    0.974  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_SortedSet                  avgt   20    671.401 ±   11.361  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_Array                      avgt   20     71.075 ±    0.318  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_ArraySet                   avgt   20      1.090 ±    0.016  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_BitSet                     avgt   20      2.962 ±    0.053  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_JavaHashSet                avgt   20      5.878 ±    0.040  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_Set                        avgt   20      7.462 ±    0.047  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_SortedSet                  avgt   20     19.006 ±    0.747  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_Array                  avgt   20      4.630 ±    0.053  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_ArraySet               avgt   20      0.858 ±    0.014  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_BitSet                 avgt   20      2.519 ±    0.043  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_JavaHashSet            avgt   20      5.899 ±    0.021  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_Set                    avgt   20      5.596 ±    0.111  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_SortedSet              avgt   20      8.181 ±    0.101  us/op

[info] Benchmark                                                              Mode  Cnt      Score      Error  Units
[info] AppendBenchmark_Int_Large.append_javaArrayList                         avgt   20  12765.178 ±  460.385  us/op
[info] AppendBenchmark_Int_Large.append_list                                  avgt   20  16816.724 ±  957.273  us/op
[info] AppendBenchmark_Int_Large.append_listBuffer                            avgt   20   9637.801 ±  504.066  us/op
[info] AppendBenchmark_Int_Large.prepend_javaArrayList                        avgt   20  26055.000 ± 1284.736  us/op
[info] AppendBenchmark_Int_Large.prepend_list                                 avgt   20   7577.411 ±  551.762  us/op
[info] AppendBenchmark_Int_Large.prepend_listBuffer                           avgt   20   8981.006 ±  258.149  us/op
[info] AppendBenchmark_String_Large.append_javaArrayList                      avgt   20  13188.769 ± 1185.263  us/op
[info] AppendBenchmark_String_Large.append_list                               avgt   20  17083.930 ± 1227.071  us/op
[info] AppendBenchmark_String_Large.append_listBuffer                         avgt   20   9593.616 ± 1379.122  us/op
[info] AppendBenchmark_String_Large.prepend_javaArrayList                     avgt   20  27804.780 ± 1405.925  us/op
[info] AppendBenchmark_String_Large.prepend_list                              avgt   20   7030.266 ±  193.083  us/op
[info] AppendBenchmark_String_Large.prepend_listBuffer                        avgt   20   7836.788 ±  611.296  us/op
[info] CollectionIntIterationBenchmark_Large.fastFoldLeftWithIndex_Vector     avgt   20   3999.175 ±  513.782  us/op
[info] CollectionIntIterationBenchmark_Large.fastFoldLeft_Array               avgt   20      0.001 ±    0.001  us/op
[info] CollectionIntIterationBenchmark_Large.fastFoldLeft_List                avgt   20   4612.011 ±  879.636  us/op
[info] CollectionIntIterationBenchmark_Large.fastFoldLeft_Vector              avgt   20   3213.360 ±  151.304  us/op
[info] CollectionIntIterationBenchmark_Large.foldLeft_Array                   avgt   20   4462.846 ±  236.356  us/op
[info] CollectionIntIterationBenchmark_Large.foldLeft_List                    avgt   20   5607.385 ± 1053.838  us/op
[info] CollectionIntIterationBenchmark_Large.foldLeft_Vector                  avgt   20   5485.978 ±  172.795  us/op
[info] CollectionIntIterationBenchmark_Large.for_Array                        avgt   20   3483.925 ±   53.573  us/op
[info] CollectionIntIterationBenchmark_Large.for_List                         avgt   20   4500.697 ±  974.784  us/op
[info] CollectionIntIterationBenchmark_Large.for_Vector                       avgt   20   2751.005 ±  105.656  us/op
[info] CollectionIntIterationBenchmark_Large.mapSum_Array                     avgt   20   7136.018 ±  108.666  us/op
[info] CollectionIntIterationBenchmark_Large.mapSum_List                      avgt   20  32512.963 ± 2993.800  us/op
[info] CollectionIntIterationBenchmark_Large.mapSum_Vector                    avgt   20  12154.551 ±  726.617  us/op
[info] CollectionIntIterationBenchmark_Large.recursion_List                   avgt   20   3822.321 ±  603.733  us/op
[info] CollectionIntIterationBenchmark_Large.reverseWhile_Array               avgt   20      0.001 ±    0.001  us/op
[info] CollectionIntIterationBenchmark_Large.reverseWhile_Vector              avgt   20   4068.515 ±  300.364  us/op
[info] CollectionIntIterationBenchmark_Large.viewMapSum_Array                 avgt   20   8066.798 ±  340.808  us/op
[info] CollectionIntIterationBenchmark_Large.viewMapSum_List                  avgt   20   7423.294 ±  220.858  us/op
[info] CollectionIntIterationBenchmark_Large.viewMapSum_Vector                avgt   20   9185.793 ±  186.658  us/op
[info] CollectionIntIterationBenchmark_Large.while_Array                      avgt   20      0.001 ±    0.001  us/op
[info] CollectionIntIterationBenchmark_Large.while_List                       avgt   20   4214.457 ±  327.508  us/op
[info] CollectionIntIterationBenchmark_Large.while_Vector                     avgt   20   3814.178 ±  308.438  us/op
[info] CollectionStringIterationBenchmark_Large.fastFoldLeftWithIndex_Vector  avgt   20  20434.877 ± 1749.234  us/op
[info] CollectionStringIterationBenchmark_Large.fastFoldLeft_Array            avgt   20  12626.250 ± 1788.903  us/op
[info] CollectionStringIterationBenchmark_Large.fastFoldLeft_List             avgt   20  10478.282 ±  471.352  us/op
[info] CollectionStringIterationBenchmark_Large.fastFoldLeft_Vector           avgt   20  12459.038 ± 1122.152  us/op
[info] CollectionStringIterationBenchmark_Large.foldLeft_Array                avgt   20  10137.159 ±  212.485  us/op
[info] CollectionStringIterationBenchmark_Large.foldLeft_List                 avgt   20  12884.248 ±  525.880  us/op
[info] CollectionStringIterationBenchmark_Large.foldLeft_Vector               avgt   20  13854.922 ±  949.496  us/op
[info] CollectionStringIterationBenchmark_Large.for_Array                     avgt   20  14023.501 ± 1046.649  us/op
[info] CollectionStringIterationBenchmark_Large.for_List                      avgt   20  18656.625 ±  587.042  us/op
[info] CollectionStringIterationBenchmark_Large.for_Vector                    avgt   20  16898.890 ±  156.602  us/op
[info] CollectionStringIterationBenchmark_Large.mapSum_Array                  avgt   20  13711.189 ±  181.096  us/op
[info] CollectionStringIterationBenchmark_Large.mapSum_List                   avgt   20  35897.080 ± 3338.876  us/op
[info] CollectionStringIterationBenchmark_Large.mapSum_Vector                 avgt   20  18794.800 ± 1038.563  us/op
[info] CollectionStringIterationBenchmark_Large.recursion_List                avgt   20  19635.355 ± 1451.382  us/op
[info] CollectionStringIterationBenchmark_Large.reverseWhile_Array            avgt   20  13097.788 ±  553.747  us/op
[info] CollectionStringIterationBenchmark_Large.reverseWhile_Vector           avgt   20  19974.978 ± 1852.859  us/op
[info] CollectionStringIterationBenchmark_Large.viewMapSum_Array              avgt   20  12670.262 ±  517.548  us/op
[info] CollectionStringIterationBenchmark_Large.viewMapSum_List               avgt   20  15128.253 ±  392.775  us/op
[info] CollectionStringIterationBenchmark_Large.viewMapSum_Vector             avgt   20  19387.333 ± 1087.420  us/op
[info] CollectionStringIterationBenchmark_Large.while_Array                   avgt   20  13104.002 ± 1389.059  us/op
[info] CollectionStringIterationBenchmark_Large.while_List                    avgt   20  18584.834 ± 1457.450  us/op
[info] CollectionStringIterationBenchmark_Large.while_Vector                  avgt   20  20730.077 ± 2721.862  us/op
[info] MapBenchmark_Int_HalfHit_Large.apply_ArrayMap                          avgt   20      2.224 ±    0.033  us/op
[info] MapBenchmark_Int_HalfHit_Large.get_HashMap                             avgt   20     40.345 ±    0.624  us/op
[info] MapBenchmark_Int_HalfHit_Large.get_IntMap                              avgt   20    251.762 ±   10.623  us/op
[info] MapBenchmark_Int_HalfHit_Large.get_JavaHashMap                         avgt   20     13.004 ±    0.205  us/op
[info] MapBenchmark_Int_HalfHit_Small.apply_ArrayMap                          avgt   20      2.006 ±    0.035  us/op
[info] MapBenchmark_Int_HalfHit_Small.get_HashMap                             avgt   20      9.215 ±    0.033  us/op
[info] MapBenchmark_Int_HalfHit_Small.get_IntMap                              avgt   20     15.416 ±    0.223  us/op
[info] MapBenchmark_Int_HalfHit_Small.get_JavaHashMap                         avgt   20      8.058 ±    1.090  us/op
[info] MapBenchmark_Invoice_HalfHit_Large.apply_ArrayMap                      avgt   20      2.711 ±    0.054  us/op
[info] MapBenchmark_Invoice_HalfHit_Large.get_HashMap                         avgt   20     68.857 ±    0.318  us/op
[info] MapBenchmark_Invoice_HalfHit_Large.get_JavaHashMap                     avgt   20     12.659 ±    0.903  us/op
[info] MapBenchmark_Invoice_HalfHit_Small.apply_ArrayMap                      avgt   20      2.160 ±    0.075  us/op
[info] MapBenchmark_Invoice_HalfHit_Small.get_HashMap                         avgt   20     10.465 ±    0.153  us/op
[info] MapBenchmark_Invoice_HalfHit_Small.get_JavaHashMap                     avgt   20      6.792 ±    0.029  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_Array                  avgt   20     ≈ 10⁻³             us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_ArraySet               avgt   20      2.824 ±    0.051  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_BitSet                 avgt   20      3.421 ±    0.013  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_JavaHashSet            avgt   20     12.043 ±    0.165  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_Set                    avgt   20     47.544 ±    0.864  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_SortedSet              avgt   20    660.363 ±   10.244  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_Array                  avgt   20     71.497 ±    0.714  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_ArraySet               avgt   20      0.883 ±    0.013  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_BitSet                 avgt   20      2.701 ±    0.029  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_JavaHashSet            avgt   20      6.342 ±    0.142  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_Set                    avgt   20      9.032 ±    0.031  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_SortedSet              avgt   20     18.796 ±    0.268  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_Array              avgt   20      4.614 ±    0.028  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_ArraySet           avgt   20      0.805 ±    0.008  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_BitSet             avgt   20      2.529 ±    0.012  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_JavaHashSet        avgt   20      6.879 ±    0.107  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_Set                avgt   20      6.980 ±    0.730  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_SortedSet          avgt   20      8.111 ±    0.082  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_Array                          avgt   20     ≈ 10⁻³             us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_ArraySet                       avgt   20      1.737 ±    0.016  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_BitSet                         avgt   20      2.872 ±    0.044  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_JavaHashSet                    avgt   20     15.901 ±    0.267  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_Set                            avgt   20     44.937 ±    0.483  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_SortedSet                      avgt   20    613.192 ±    7.663  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_Array                          avgt   20    211.012 ±    2.939  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_ArraySet                       avgt   20      0.778 ±    0.012  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_BitSet                         avgt   20      2.533 ±    0.038  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_JavaHashSet                    avgt   20      6.166 ±    0.103  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_Set                            avgt   20      7.121 ±    0.116  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_SortedSet                      avgt   20     22.958 ±    0.245  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_Array                      avgt   20     13.768 ±    0.538  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_ArraySet                   avgt   20      0.778 ±    0.012  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_BitSet                     avgt   20      2.829 ±    0.043  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_JavaHashSet                avgt   20      6.556 ±    0.100  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_Set                        avgt   20      5.344 ±    0.075  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_SortedSet                  avgt   20      8.666 ±    0.230  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_Array                      avgt   20     ≈ 10⁻³             us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_ArraySet                   avgt   20      2.813 ±    0.015  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_BitSet                     avgt   20      3.426 ±    0.049  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_JavaHashSet                avgt   20     10.667 ±    0.074  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_Set                        avgt   20     60.975 ±    0.924  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_SortedSet                  avgt   20    664.505 ±    4.812  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_Array                      avgt   20     71.635 ±    1.117  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_ArraySet                   avgt   20      0.871 ±    0.019  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_BitSet                     avgt   20      2.928 ±    0.049  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_JavaHashSet                avgt   20      5.958 ±    0.091  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_Set                        avgt   20      7.548 ±    0.119  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_SortedSet                  avgt   20     18.601 ±    0.301  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_Array                  avgt   20      4.634 ±    0.069  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_ArraySet               avgt   20      0.824 ±    0.020  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_BitSet                 avgt   20      2.527 ±    0.039  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_JavaHashSet            avgt   20      5.614 ±    0.105  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_Set                    avgt   20      5.513 ±    0.113  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_SortedSet              avgt   20      8.203 ±    0.187  us/op

[info] Benchmark                                                              Mode  Cnt      Score      Error  Units
[info] AppendBenchmark_Int_Large.append_javaArrayList                         avgt   20  12755.171 ±  513.563  us/op
[info] AppendBenchmark_Int_Large.append_list                                  avgt   20  18200.967 ± 1171.960  us/op
[info] AppendBenchmark_Int_Large.append_listBuffer                            avgt   20   8354.273 ±  431.735  us/op
[info] AppendBenchmark_Int_Large.prepend_javaArrayList                        avgt   20  27728.819 ± 4464.685  us/op
[info] AppendBenchmark_Int_Large.prepend_list                                 avgt   20   7118.633 ±  617.043  us/op
[info] AppendBenchmark_Int_Large.prepend_listBuffer                           avgt   20   7878.729 ±  452.528  us/op
[info] AppendBenchmark_String_Large.append_javaArrayList                      avgt   20  13352.138 ±  338.936  us/op
[info] AppendBenchmark_String_Large.append_list                               avgt   20  17092.135 ± 1081.220  us/op
[info] AppendBenchmark_String_Large.append_listBuffer                         avgt   20   9497.681 ± 1135.385  us/op
[info] AppendBenchmark_String_Large.prepend_javaArrayList                     avgt   20  28228.907 ± 4939.628  us/op
[info] AppendBenchmark_String_Large.prepend_list                              avgt   20   7090.196 ±  460.914  us/op
[info] AppendBenchmark_String_Large.prepend_listBuffer                        avgt   20   8468.484 ±  960.772  us/op
[info] CollectionIntIterationBenchmark_Large.fastFoldLeftWithIndex_Vector     avgt   20   3586.489 ±   60.574  us/op
[info] CollectionIntIterationBenchmark_Large.fastFoldLeft_Array               avgt   20      0.001 ±    0.001  us/op
[info] CollectionIntIterationBenchmark_Large.fastFoldLeft_List                avgt   20   3652.480 ±  155.585  us/op
[info] CollectionIntIterationBenchmark_Large.fastFoldLeft_Vector              avgt   20   3539.768 ±  348.158  us/op
[info] CollectionIntIterationBenchmark_Large.foldLeft_Array                   avgt   20   4259.184 ±   24.441  us/op
[info] CollectionIntIterationBenchmark_Large.foldLeft_List                    avgt   20   5526.670 ±  900.723  us/op
[info] CollectionIntIterationBenchmark_Large.foldLeft_Vector                  avgt   20   5548.842 ±  337.629  us/op
[info] CollectionIntIterationBenchmark_Large.for_Array                        avgt   20   3449.637 ±   24.794  us/op
[info] CollectionIntIterationBenchmark_Large.for_List                         avgt   20   4206.373 ±  658.944  us/op
[info] CollectionIntIterationBenchmark_Large.for_Vector                       avgt   20   2795.283 ±  138.181  us/op
[info] CollectionIntIterationBenchmark_Large.mapSum_Array                     avgt   20   7186.112 ±   85.591  us/op
[info] CollectionIntIterationBenchmark_Large.mapSum_List                      avgt   20  31943.885 ± 3302.126  us/op
[info] CollectionIntIterationBenchmark_Large.mapSum_Vector                    avgt   20  12326.818 ±  373.907  us/op
[info] CollectionIntIterationBenchmark_Large.recursion_List                   avgt   20   3731.121 ±  436.672  us/op
[info] CollectionIntIterationBenchmark_Large.reverseWhile_Array               avgt   20      0.001 ±    0.001  us/op
[info] CollectionIntIterationBenchmark_Large.reverseWhile_Vector              avgt   20   3909.329 ±  174.757  us/op
[info] CollectionIntIterationBenchmark_Large.viewMapSum_Array                 avgt   20   7892.869 ±   77.526  us/op
[info] CollectionIntIterationBenchmark_Large.viewMapSum_List                  avgt   20   7419.329 ±  226.585  us/op
[info] CollectionIntIterationBenchmark_Large.viewMapSum_Vector                avgt   20   9146.035 ±  374.930  us/op
[info] CollectionIntIterationBenchmark_Large.while_Array                      avgt   20      0.001 ±    0.001  us/op
[info] CollectionIntIterationBenchmark_Large.while_List                       avgt   20   4868.495 ±  887.050  us/op
[info] CollectionIntIterationBenchmark_Large.while_Vector                     avgt   20   3730.698 ±  382.985  us/op
[info] CollectionStringIterationBenchmark_Large.fastFoldLeftWithIndex_Vector  avgt   20  15647.458 ± 2312.615  us/op
[info] CollectionStringIterationBenchmark_Large.fastFoldLeft_Array            avgt   20   8550.703 ±  524.084  us/op
[info] CollectionStringIterationBenchmark_Large.fastFoldLeft_List             avgt   20  18479.892 ± 1726.870  us/op
[info] CollectionStringIterationBenchmark_Large.fastFoldLeft_Vector           avgt   20  18870.727 ± 1026.080  us/op
[info] CollectionStringIterationBenchmark_Large.foldLeft_Array                avgt   20  10428.697 ±   89.748  us/op
[info] CollectionStringIterationBenchmark_Large.foldLeft_List                 avgt   20  12023.432 ±  278.438  us/op
[info] CollectionStringIterationBenchmark_Large.foldLeft_Vector               avgt   20  13161.858 ±  970.968  us/op
[info] CollectionStringIterationBenchmark_Large.for_Array                     avgt   20  13796.670 ± 1610.675  us/op
[info] CollectionStringIterationBenchmark_Large.for_List                      avgt   20  18218.911 ± 2099.355  us/op
[info] CollectionStringIterationBenchmark_Large.for_Vector                    avgt   20  10892.890 ± 1427.534  us/op
[info] CollectionStringIterationBenchmark_Large.mapSum_Array                  avgt   20  13622.556 ±  225.466  us/op
[info] CollectionStringIterationBenchmark_Large.mapSum_List                   avgt   20  35726.495 ± 4337.333  us/op
[info] CollectionStringIterationBenchmark_Large.mapSum_Vector                 avgt   20  18849.514 ±  639.996  us/op
[info] CollectionStringIterationBenchmark_Large.recursion_List                avgt   20  11078.895 ±  673.469  us/op
[info] CollectionStringIterationBenchmark_Large.reverseWhile_Array            avgt   20  13139.776 ±  684.896  us/op
[info] CollectionStringIterationBenchmark_Large.reverseWhile_Vector           avgt   20  18445.281 ± 2180.168  us/op
[info] CollectionStringIterationBenchmark_Large.viewMapSum_Array              avgt   20  13312.004 ±  434.959  us/op
[info] CollectionStringIterationBenchmark_Large.viewMapSum_List               avgt   20  14086.462 ±  733.181  us/op
[info] CollectionStringIterationBenchmark_Large.viewMapSum_Vector             avgt   20  18961.593 ± 1233.483  us/op
[info] CollectionStringIterationBenchmark_Large.while_Array                   avgt   20   8690.490 ±  299.147  us/op
[info] CollectionStringIterationBenchmark_Large.while_List                    avgt   20  19333.658 ±  425.447  us/op
[info] CollectionStringIterationBenchmark_Large.while_Vector                  avgt   20  18315.947 ±  769.119  us/op
[info] MapBenchmark_Int_HalfHit_Large.apply_ArrayMap                          avgt   20      2.178 ±    0.024  us/op
[info] MapBenchmark_Int_HalfHit_Large.get_HashMap                             avgt   20     41.667 ±    0.638  us/op
[info] MapBenchmark_Int_HalfHit_Large.get_IntMap                              avgt   20    248.886 ±    4.882  us/op
[info] MapBenchmark_Int_HalfHit_Large.get_JavaHashMap                         avgt   20     12.663 ±    0.180  us/op
[info] MapBenchmark_Int_HalfHit_Small.apply_ArrayMap                          avgt   20      1.964 ±    0.030  us/op
[info] MapBenchmark_Int_HalfHit_Small.get_HashMap                             avgt   20      9.210 ±    0.143  us/op
[info] MapBenchmark_Int_HalfHit_Small.get_IntMap                              avgt   20     15.452 ±    0.238  us/op
[info] MapBenchmark_Int_HalfHit_Small.get_JavaHashMap                         avgt   20      7.196 ±    0.089  us/op
[info] MapBenchmark_Invoice_HalfHit_Large.apply_ArrayMap                      avgt   20      2.670 ±    0.050  us/op
[info] MapBenchmark_Invoice_HalfHit_Large.get_HashMap                         avgt   20     65.709 ±    0.269  us/op
[info] MapBenchmark_Invoice_HalfHit_Large.get_JavaHashMap                     avgt   20     12.415 ±    0.090  us/op
[info] MapBenchmark_Invoice_HalfHit_Small.apply_ArrayMap                      avgt   20      2.130 ±    0.032  us/op
[info] MapBenchmark_Invoice_HalfHit_Small.get_HashMap                         avgt   20     10.477 ±    0.191  us/op
[info] MapBenchmark_Invoice_HalfHit_Small.get_JavaHashMap                     avgt   20      6.838 ±    0.032  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_Array                  avgt   20     ≈ 10⁻³             us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_ArraySet               avgt   20      2.826 ±    0.040  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_BitSet                 avgt   20      3.406 ±    0.008  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_JavaHashSet            avgt   20     12.028 ±    0.190  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_Set                    avgt   20     47.926 ±    0.884  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_SortedSet              avgt   20    661.232 ±   10.488  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_Array                  avgt   20     71.276 ±    1.118  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_ArraySet               avgt   20      0.889 ±    0.013  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_BitSet                 avgt   20      2.967 ±    0.030  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_JavaHashSet            avgt   20      6.461 ±    0.107  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_Set                    avgt   20      9.112 ±    0.146  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_SortedSet              avgt   20     19.504 ±    0.703  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_Array              avgt   20      4.431 ±    0.082  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_ArraySet           avgt   20      0.819 ±    0.019  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_BitSet             avgt   20      2.519 ±    0.016  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_JavaHashSet        avgt   20      6.753 ±    0.126  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_Set                avgt   20      6.417 ±    0.163  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_SortedSet          avgt   20      8.362 ±    0.060  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_Array                          avgt   20     ≈ 10⁻³             us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_ArraySet                       avgt   20      2.195 ±    0.011  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_BitSet                         avgt   20      2.860 ±    0.008  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_JavaHashSet                    avgt   20     15.737 ±    0.127  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_Set                            avgt   20     45.954 ±    0.851  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_SortedSet                      avgt   20    609.113 ±    2.748  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_Array                          avgt   20    212.904 ±    5.139  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_ArraySet                       avgt   20      0.775 ±    0.010  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_BitSet                         avgt   20      2.591 ±    0.044  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_JavaHashSet                    avgt   20      6.278 ±    0.040  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_Set                            avgt   20      7.019 ±    0.057  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_SortedSet                      avgt   20     23.468 ±    0.356  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_Array                      avgt   20     13.569 ±    0.168  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_ArraySet                   avgt   20      0.952 ±    0.015  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_BitSet                     avgt   20      3.005 ±    0.038  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_JavaHashSet                avgt   20      6.495 ±    0.097  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_Set                        avgt   20      5.347 ±    0.079  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_SortedSet                  avgt   20      7.990 ±    0.126  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_Array                      avgt   20     ≈ 10⁻³             us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_ArraySet                   avgt   20      3.105 ±    0.059  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_BitSet                     avgt   20      3.412 ±    0.008  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_JavaHashSet                avgt   20     10.694 ±    0.189  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_Set                        avgt   20     58.458 ±    0.370  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_SortedSet                  avgt   20    654.746 ±   10.432  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_Array                      avgt   20     71.701 ±    0.210  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_ArraySet                   avgt   20      0.854 ±    0.010  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_BitSet                     avgt   20      2.371 ±    0.038  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_JavaHashSet                avgt   20      5.973 ±    0.095  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_Set                        avgt   20      7.591 ±    0.042  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_SortedSet                  avgt   20     18.361 ±    0.305  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_Array                  avgt   20      4.634 ±    0.072  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_ArraySet               avgt   20      1.039 ±    0.018  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_BitSet                 avgt   20      2.507 ±    0.017  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_JavaHashSet            avgt   20      5.616 ±    0.086  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_Set                    avgt   20      5.577 ±    0.085  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_SortedSet              avgt   20      8.726 ±    0.144  us/op

[info] Benchmark                                                              Mode  Cnt      Score      Error  Units
[info] AppendBenchmark_Int_Large.append_javaArrayList                         avgt   20  12800.870 ±  594.314  us/op
[info] AppendBenchmark_Int_Large.append_list                                  avgt   20  16582.681 ± 1402.104  us/op
[info] AppendBenchmark_Int_Large.append_listBuffer                            avgt   20   8051.070 ±  660.069  us/op
[info] AppendBenchmark_Int_Large.prepend_javaArrayList                        avgt   20  27208.135 ± 1804.964  us/op
[info] AppendBenchmark_Int_Large.prepend_list                                 avgt   20   8031.754 ±  870.101  us/op
[info] AppendBenchmark_Int_Large.prepend_listBuffer                           avgt   20   9003.673 ±  511.333  us/op
[info] AppendBenchmark_String_Large.append_javaArrayList                      avgt   20  13034.674 ±  264.477  us/op
[info] AppendBenchmark_String_Large.append_list                               avgt   20  16768.710 ± 1116.402  us/op
[info] AppendBenchmark_String_Large.append_listBuffer                         avgt   20   9014.382 ±  372.606  us/op
[info] AppendBenchmark_String_Large.prepend_javaArrayList                     avgt   20  27562.924 ± 1514.381  us/op
[info] AppendBenchmark_String_Large.prepend_list                              avgt   20   7283.975 ±  419.329  us/op
[info] AppendBenchmark_String_Large.prepend_listBuffer                        avgt   20   8510.237 ±  406.221  us/op
[info] CollectionIntIterationBenchmark_Large.fastFoldLeftWithIndex_Vector     avgt   20   3568.307 ±   73.534  us/op
[info] CollectionIntIterationBenchmark_Large.fastFoldLeft_Array               avgt   20      0.001 ±    0.001  us/op
[info] CollectionIntIterationBenchmark_Large.fastFoldLeft_List                avgt   20   3675.157 ±   59.021  us/op
[info] CollectionIntIterationBenchmark_Large.fastFoldLeft_Vector              avgt   20   3138.525 ±   90.345  us/op
[info] CollectionIntIterationBenchmark_Large.foldLeft_Array                   avgt   20   4227.136 ±   61.502  us/op
[info] CollectionIntIterationBenchmark_Large.foldLeft_List                    avgt   20   5446.215 ±  711.578  us/op
[info] CollectionIntIterationBenchmark_Large.foldLeft_Vector                  avgt   20   5618.729 ±  287.840  us/op
[info] CollectionIntIterationBenchmark_Large.for_Array                        avgt   20   3505.969 ±   96.926  us/op
[info] CollectionIntIterationBenchmark_Large.for_List                         avgt   20   4457.457 ±  732.506  us/op
[info] CollectionIntIterationBenchmark_Large.for_Vector                       avgt   20   2700.723 ±   36.588  us/op
[info] CollectionIntIterationBenchmark_Large.mapSum_Array                     avgt   20   7150.272 ±   55.429  us/op
[info] CollectionIntIterationBenchmark_Large.mapSum_List                      avgt   20  31667.756 ± 2720.435  us/op
[info] CollectionIntIterationBenchmark_Large.mapSum_Vector                    avgt   20  12532.459 ±  809.107  us/op
[info] CollectionIntIterationBenchmark_Large.recursion_List                   avgt   20   3801.610 ±  268.712  us/op
[info] CollectionIntIterationBenchmark_Large.reverseWhile_Array               avgt   20      0.001 ±    0.001  us/op
[info] CollectionIntIterationBenchmark_Large.reverseWhile_Vector              avgt   20   4171.039 ±  415.491  us/op
[info] CollectionIntIterationBenchmark_Large.viewMapSum_Array                 avgt   20   7874.992 ±   49.853  us/op
[info] CollectionIntIterationBenchmark_Large.viewMapSum_List                  avgt   20   7258.308 ±  336.115  us/op
[info] CollectionIntIterationBenchmark_Large.viewMapSum_Vector                avgt   20   9353.166 ±  245.885  us/op
[info] CollectionIntIterationBenchmark_Large.while_Array                      avgt   20      0.001 ±    0.001  us/op
[info] CollectionIntIterationBenchmark_Large.while_List                       avgt   20   4501.810 ±  794.400  us/op
[info] CollectionIntIterationBenchmark_Large.while_Vector                     avgt   20   3544.804 ±  119.161  us/op
[info] CollectionStringIterationBenchmark_Large.fastFoldLeftWithIndex_Vector  avgt   20  17470.055 ± 1694.824  us/op
[info] CollectionStringIterationBenchmark_Large.fastFoldLeft_Array            avgt   20   8718.644 ±   96.099  us/op
[info] CollectionStringIterationBenchmark_Large.fastFoldLeft_List             avgt   20  18796.149 ±  374.302  us/op
[info] CollectionStringIterationBenchmark_Large.fastFoldLeft_Vector           avgt   20  17682.197 ±  415.970  us/op
[info] CollectionStringIterationBenchmark_Large.foldLeft_Array                avgt   20   9889.766 ±  517.141  us/op
[info] CollectionStringIterationBenchmark_Large.foldLeft_List                 avgt   20  12570.573 ±  339.957  us/op
[info] CollectionStringIterationBenchmark_Large.foldLeft_Vector               avgt   20  12835.937 ±  390.387  us/op
[info] CollectionStringIterationBenchmark_Large.for_Array                     avgt   20  14374.083 ±   56.195  us/op
[info] CollectionStringIterationBenchmark_Large.for_List                      avgt   20  17950.766 ± 1117.058  us/op
[info] CollectionStringIterationBenchmark_Large.for_Vector                    avgt   20  17025.925 ±  158.939  us/op
[info] CollectionStringIterationBenchmark_Large.mapSum_Array                  avgt   20  13926.091 ±  186.253  us/op
[info] CollectionStringIterationBenchmark_Large.mapSum_List                   avgt   20  38152.268 ± 4655.668  us/op
[info] CollectionStringIterationBenchmark_Large.mapSum_Vector                 avgt   20  20381.782 ±  488.369  us/op
[info] CollectionStringIterationBenchmark_Large.recursion_List                avgt   20   9805.602 ±  957.207  us/op
[info] CollectionStringIterationBenchmark_Large.reverseWhile_Array            avgt   20  13071.193 ± 1422.574  us/op
[info] CollectionStringIterationBenchmark_Large.reverseWhile_Vector           avgt   20  12071.608 ± 1432.335  us/op
[info] CollectionStringIterationBenchmark_Large.viewMapSum_Array              avgt   20  13861.197 ±  953.512  us/op
[info] CollectionStringIterationBenchmark_Large.viewMapSum_List               avgt   20  14401.988 ±  354.896  us/op
[info] CollectionStringIterationBenchmark_Large.viewMapSum_Vector             avgt   20  17542.792 ± 1780.528  us/op
[info] CollectionStringIterationBenchmark_Large.while_Array                   avgt   20  13577.910 ±  410.090  us/op
[info] CollectionStringIterationBenchmark_Large.while_List                    avgt   20  19070.747 ± 1933.979  us/op
[info] CollectionStringIterationBenchmark_Large.while_Vector                  avgt   20  12325.365 ±  590.620  us/op
[info] MapBenchmark_Int_HalfHit_Large.apply_ArrayMap                          avgt   20      2.213 ±    0.011  us/op
[info] MapBenchmark_Int_HalfHit_Large.get_HashMap                             avgt   20     41.446 ±    0.611  us/op
[info] MapBenchmark_Int_HalfHit_Large.get_IntMap                              avgt   20    251.867 ±    8.035  us/op
[info] MapBenchmark_Int_HalfHit_Large.get_JavaHashMap                         avgt   20     12.760 ±    0.070  us/op
[info] MapBenchmark_Int_HalfHit_Small.apply_ArrayMap                          avgt   20      2.012 ±    0.015  us/op
[info] MapBenchmark_Int_HalfHit_Small.get_HashMap                             avgt   20      9.338 ±    0.367  us/op
[info] MapBenchmark_Int_HalfHit_Small.get_IntMap                              avgt   20     15.462 ±    0.328  us/op
[info] MapBenchmark_Int_HalfHit_Small.get_JavaHashMap                         avgt   20      7.145 ±    0.060  us/op
[info] MapBenchmark_Invoice_HalfHit_Large.apply_ArrayMap                      avgt   20      2.700 ±    0.040  us/op
[info] MapBenchmark_Invoice_HalfHit_Large.get_HashMap                         avgt   20     72.220 ±    1.072  us/op
[info] MapBenchmark_Invoice_HalfHit_Large.get_JavaHashMap                     avgt   20     12.245 ±    0.218  us/op
[info] MapBenchmark_Invoice_HalfHit_Small.apply_ArrayMap                      avgt   20      2.141 ±    0.032  us/op
[info] MapBenchmark_Invoice_HalfHit_Small.get_HashMap                         avgt   20     10.423 ±    0.137  us/op
[info] MapBenchmark_Invoice_HalfHit_Small.get_JavaHashMap                     avgt   20      6.859 ±    0.078  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_Array                  avgt   20     ≈ 10⁻³             us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_ArraySet               avgt   20      2.831 ±    0.008  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_BitSet                 avgt   20      3.426 ±    0.049  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_JavaHashSet            avgt   20     12.249 ±    0.094  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_Set                    avgt   20     47.203 ±    0.702  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Large.contains_SortedSet              avgt   20    666.765 ±    1.918  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_Array                  avgt   20     71.425 ±    0.883  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_ArraySet               avgt   20      0.883 ±    0.014  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_BitSet                 avgt   20      3.095 ±    0.043  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_JavaHashSet            avgt   20      6.452 ±    0.092  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_Set                    avgt   20      9.071 ±    0.146  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_Small.contains_SortedSet              avgt   20     18.807 ±    0.175  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_Array              avgt   20      4.632 ±    0.054  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_ArraySet           avgt   20      0.824 ±    0.005  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_BitSet             avgt   20      2.512 ±    0.035  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_JavaHashSet        avgt   20      6.750 ±    0.192  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_Set                avgt   20      6.318 ±    0.165  us/op
[info] SetBenchmark_BadInvoice_HalfMiss_VerySmall.contains_SortedSet          avgt   20      8.484 ±    0.138  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_Array                          avgt   20     ≈ 10⁻³             us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_ArraySet                       avgt   20      2.289 ±    0.201  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_BitSet                         avgt   20      2.864 ±    0.009  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_JavaHashSet                    avgt   20     16.066 ±    0.084  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_Set                            avgt   20     44.953 ±    0.201  us/op
[info] SetBenchmark_Int_HalfHit_Large.contains_SortedSet                      avgt   20    582.434 ±    3.392  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_Array                          avgt   20    211.889 ±    2.576  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_ArraySet                       avgt   20      0.774 ±    0.002  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_BitSet                         avgt   20      2.442 ±    0.026  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_JavaHashSet                    avgt   20      6.151 ±    0.036  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_Set                            avgt   20      7.098 ±    0.043  us/op
[info] SetBenchmark_Int_HalfHit_Small.contains_SortedSet                      avgt   20     23.072 ±    0.460  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_Array                      avgt   20     13.686 ±    0.398  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_ArraySet                   avgt   20      0.775 ±    0.003  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_BitSet                     avgt   20      2.855 ±    0.010  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_JavaHashSet                avgt   20      6.540 ±    0.122  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_Set                        avgt   20      5.360 ±    0.098  us/op
[info] SetBenchmark_Int_HalfHit_VerySmall.contains_SortedSet                  avgt   20      8.514 ±    0.160  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_Array                      avgt   20     ≈ 10⁻³             us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_ArraySet                   avgt   20      2.831 ±    0.043  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_BitSet                     avgt   20      3.426 ±    0.053  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_JavaHashSet                avgt   20     10.913 ±    0.128  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_Set                        avgt   20     57.557 ±    0.971  us/op
[info] SetBenchmark_Invoice_HalfHit_Large.contains_SortedSet                  avgt   20    665.101 ±   11.454  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_Array                      avgt   20     72.001 ±    0.321  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_ArraySet                   avgt   20      0.840 ±    0.014  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_BitSet                     avgt   20      2.940 ±    0.052  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_JavaHashSet                avgt   20      5.948 ±    0.042  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_Set                        avgt   20      7.555 ±    0.081  us/op
[info] SetBenchmark_Invoice_HalfHit_Small.contains_SortedSet                  avgt   20     19.976 ±    0.958  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_Array                  avgt   20      4.619 ±    0.069  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_ArraySet               avgt   20      0.831 ±    0.011  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_BitSet                 avgt   20      2.510 ±    0.029  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_JavaHashSet            avgt   20      5.825 ±    0.023  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_Set                    avgt   20      5.499 ±    0.036  us/op
[info] SetBenchmark_Invoice_HalfHit_VerySmall.contains_SortedSet              avgt   20      8.202 ±    0.135  us/op
